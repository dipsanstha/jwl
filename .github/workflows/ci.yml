name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      working-directory: server
      run: |
        if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Run linting
      working-directory: server
      run: npm run lint --if-present
    
    - name: Run tests
      working-directory: server
      run: npm test --if-present

  build-and-deploy:
    name: Build and Deploy
    needs: lint-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install production dependencies
      working-directory: server
      run: |
        if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
          npm ci --production
        else
          npm install --production
        fi
    
    - name: Build application
      working-directory: server
      run: |
        npm run build --if-present
        # Create a basic build output if no build script exists
        mkdir -p build
        echo "Built at $(date)" > build/build-info.txt
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: server-build
        path: |
          server/build/**
          server/dist/**
          server/output/**
        if-no-files-found: warn
        retention-days: 5
    
    - name: Deploy to production
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # For example, using rsync, scp, or a deployment service
        echo "Deployment completed!"
    
    - name: Upload static files
      uses: actions/upload-artifact@v4
      with:
        name: static-assets
        path: |
          index.html
          assets/**
          images/**
          css/**
          js/**
          sitemap.xml
          robots.txt
        if-no-files-found: warn
        retention-days: 5